#!/bin/sh

# Check if the OPENAI_API_KEY environment variable is set
if [ -z "$OPENAI_API_KEY" ]; then
  echo "Error: The OPENAI_API_KEY environment variable is not set."
  echo "Please set it via: export OPENAI_API_KEY=\"sk-...\""
  exit 1
fi

# 1. Get all staged changes
DIFF_CONTENT=$(git diff --staged)
if [ -z "$DIFF_CONTENT" ]; then
    echo "No changes staged for commit."
    exit 0
fi

# 2. Use jq to safely build the JSON payload, handling special characters
JSON_PAYLOAD=$(jq -n --arg diff "$DIFF_CONTENT" '{
  "model": "gpt-4o",
  "messages": [
    {
      "role": "system",
      "content": "You are an expert Git commit message generator. Your response must be a single-line conventional commit message in the format `<type>: <subject>`. The subject must be 50 characters or less, written in the imperative mood (e.g., '\''add'\'', '\''fix'\'', '\''refactor'\''). Do not include any explanations, markdown, or extra text."
    },
    {
      "role": "user",
      "content": "Generate a commit message for the following diff: \n\n\"\"\"\n\($diff)\n\"\"\""
    }
  ],
  "max_tokens": 60,
  "temperature": 0.5
}')

# 3. Call the OpenAI API and parse the response message using jq
COMMIT_MESSAGE=$(curl -s https://api.openai.com/v1/chat/completions \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $OPENAI_API_KEY" \
  -H "OpenAI-Organization: $OPENAI_ORGANIZATION_ID" \
  -H "OpenAI-Project: $OPENAI_PROJECT_ID" \
  -d "$JSON_PAYLOAD" | jq -r ".choices[0].message.content")

# Check if a message was successfully received from the API
if [ -z "$COMMIT_MESSAGE" ] || [ "$COMMIT_MESSAGE" = "null" ]; then
    echo "Error: Failed to get a commit message from the API."
    exit 1
fi

# 4. Display the AI-generated message and wait for user confirmation
echo "ðŸ¤– Generated Commit Message: "
echo "   \033[1;33m$COMMIT_MESSAGE\033[0m" # Display in bold yellow
read -p "Press enter to commit, or Ctrl+C to cancel."

# 5. Execute the commit
git commit -m "$COMMIT_MESSAGE"
